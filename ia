// partie IA

                  public static int bestmove{ 
			  bestscore=-1000  
		          int move;
	                  for(i==0,i<2;i++){
		          for(j==0,j<2;j++){
			  for(k==0,k<2;k++){
		        if (plateau[i][j][k]==' '){
			plateau[i][j][k]= ia 
			score = minimax( plateau, 0, false);
                        plateau[i][j][k] = ' ';
				bestscore = max(score,bestscore);
				bestmove = plateau[i][j][k];
				move = {i,j};
				
			plateau[move.i][move.j] = ia;
		        Ja= humain;
				
			}
			  }
			  }
			  }
		  }
				score = {
					A = 1
					B = -1
					C = 0	
					}
		   
		 public static int minimax( plateau, profondeur, estmax){
			 result = checkwinner // regarde si gagnant à chaque coup 
				 
		if(result != 0){
			return score[résultat];
			
		}	
					}
					
	       if(estmax){
		       bestscore= 1000
			  for(i==0,i<2;i++){
		          for(j==0,j<2;j++){
			  for(k==0,k<2;k++){
				  if( plateau[i][j][k]= ''){
					  plateau[i][j][k]= ia;
				score= minimax( plateau, profondeur +1, false);
					  plateau[i][j][k]= '';
				   bestscore= max(score, bestscore);
					 
						  
					  
				  }
			  }
			  }
			  
				  return bestscore;
			  }
	       }]
		       
		       else{
			    if(estmin){
		       bestscore= -1000
			  for(i==0,i<2;i++){
		          for(j==0,j<2;j++){
			  for(k==0,k<2;k++){
				  if( plateau[i][j][k]= ''){
					  plateau[i][j][k]= humain;
				score= minimax( plateau, profondeur +1, true);
					  plateau[i][j][k]= '';
					  bestscore= min(score, bestcore);
					  
						  
					  
				  }
			  }
			  }
			   return bestscore;
				 
			  }
			     
			    }
		       }
				  
				  
				  
			
			  
		
			
			

 
		
		
	
