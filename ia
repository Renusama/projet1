// partie IA

                  public static int bestmove{ 
			  bestscore=-1000  
		          int move;
	                  for(i==0,i<2;i++){
		          for(j==0,j<2;j++){
			  for(k==0,k<2;k++){
		        if (plateau[i][j][k]==' '){
			plateau[i][j][k]= ia 
			score = minimax( plateau, 0, false);
                        plateau[i][j][k] = ' ';
				bestscore = max(score,bestscore);
				bestmove = plateau[i][j][k];
				move = {i,j};
				
			plateau[move.i][move.j] = ia;
		        Ja= humain;
				
			}
			  }
			  }
			  }
		  }
				score = {
					A = 1
					B = -1
					C = 0	
					}
		   
		 public static int minimax( plateau, profondeur, estmax){
			 result = checkwinner // regarde à chaque coup 
				 
		if(result != 0){
			return score[résultat];
			
		}	
					}
					
	       if(estmax){
		       bestscore= 1000
			  for(i==0,i<2;i++){
		          for(j==0,j<2;j++){
			  for(k==0,k<2;k++){
				  if( plateau[i][j][k]= ''){
					  plateau[i][j][k]= ia;
				score= minimax( plateau, profondeur +1, false);
					  plateau[i][j][k]= '';
				   bestscore= max(score, bestscore);
					 
						  
					  
				  }
			  }
			  }
			  
				  return bestscore;
			  }
	       }]
		       
		       else{
			    if(estmin){
		       bestscore= -1000
			  for(i==0,i<2;i++){
		          for(j==0,j<2;j++){
			  for(k==0,k<2;k++){
				  if( plateau[i][j][k]= ''){
					  plateau[i][j][k]= humain;
				score= minimax( plateau, profondeur +1, true);
					  plateau[i][j][k]= '';
					  bestscore= min(score, bestcore);
					  
						  
					  
				  }
			  }
			  }
			   return bestscore;
				 
			  }
			     
			    }
		       }
				  
				  
				  
				  
	NE PAS LIRE LE DESSUS {cA COMMENCE ICI}
			
			public static int Danger(String[][][] plateau, String Pa, String Ja, String Pe) { 
		
        boolean meilleurcoup = false;
        int i, j, k;
        for (k = 0; k < 3; k++) {
            for (i = 0; i < 3; i++) {
               if (plateau[k][0][i] == Pa && plateau[k][1][i] == Pa && plateau[k][2][i] == Pa && plateau[k][0][i] != "O"){    
	            public static boolean CondVictoire(String[][][] plateau, String Pa, String Ja) {
        boolean victoire = false;
        int i, j, k;
        for (k = 0; k < 3; k++) {
            for (i = 0; i < 3; i++) {
               if (plateau[k][0][i] == Pa && plateau[k][1][i] == Pa && plateau[k][0][i] != "O") {    //victoire lignes même taille
	       plateau[k][2][i] == Pe;
	       if (plateau[k][0][i] == Pa && plateau[k][2][i] == Pa && plateau[k][0][i] != "O") {    //victoire lignes même taille
	       plateau[k][1][i] == Pe;
	        if (plateau[k][2][i] == Pa && plateau[k][0][i] != "O") {    // bloquer lorsque 2 pions adverses de même taille sont alignés sur la même ligne
	       plateau[k][0][i] == Pe;
                    meilleurcoup = true;
		    
                } else if (plateau[1][k][i] == Pa && plateau[2][k][i] == Pa && plateau[0][k][i] != "O") {      
	         plateau[0][k][i] = Pe;
		if (plateau[1][k][i] == Pa && plateau[0][k][i] == Pa && plateau[0][k][i] != "O") {
		 plateau[2][k][i] = Pe;
		if (plateau[0][k][i] == Pa && plateau[2][k][i] == Pa && plateau[0][k][i] != "O") {
		 plateau[1][k][i] = Pe;
		    meilleurcoup = true;   // bloquer lorsque 2 pions adverses de même taille sont alignés sur la même colonne
                 
                } else if (plateau[k][i][1] == Pa && plateau[k][i][2] == Pa && plateau[k][i][0] != "O") {
		 plateau[0][k][i] = Pe;
		if (plateau[0][k][i] == Pa && plateau[2][k][i] == Pa && plateau[0][k][i] != "O") {
		 plateau[1][k][i] = Pe;
		if (plateau[0][k][i] == Pa && plateau[1][k][i] == Pa && plateau[0][k][i] != "O") {
		 plateau[2][k][i] = Pe;
		    meilleurcoup = true;  // bloquer lorsque 2 pions adverses sont sur la même case
		    
                       
                } else if ((plateau[0][1][1] == Pa) && (plateau[0][0][0] == Pa || plateau[0][2][0] == Pa)) { // 1ere ligne
                  plateau[0][2][2] = Pe || plateau[0][0][2] = Pe;
	        } else if ((plateau[0][1][1] == Pa) && (plateau[0][2][2] == Pa || plateau[0][0][2] == Pa)) {
		  plateau[0][0][0] = Pe || plateau[0][2][0] = Pe;
		   meilleurcoup = true;
		   
                  } else if ((plateau[2][1][1] == Pa) && (plateau[2][0][0] == Pa || plateau[2][0][2] == Pa)) {  
                 plateau[2][2][2] = Pe; 
		  } else if ((plateau[2][1][1] == Pa) && (plateau[2][0][0] == Pa || plateau[2][0][2] == Pa)) {  
		 plateau[2][2][0] = Pe;
	        } else if ((plateau[2][1][1] == Pa) && (plateau[2][2][2] == Pa || plateau[2][2][0] == Pa)) {
		  plateau[2][0][0] = Pe 
		   } else if ((plateau[2][1][1] == Pa) && (plateau[2][2][2] == Pa || plateau[2][2][0] == Pa)) {
		  plateau[2][0][2] = Pe;
		  meilleurcoup = true;
		    
		  } else if ((plateau[1][0][1] == Pa) && (plateau[0][0][0] == Pa || plateau[0][0][2] == Pa)) {  
                 plateau[2][0][2] = Pe;
		  } else if ((plateau[1][0][1] == Pa) && (plateau[0][0][0] == Pa || plateau[0][0][2] == Pa)) { 
		 plateau[2][0][0] = Pe;
	       } else if ((plateau[1][0][1] == Pa) && (plateau[0][0][0] == Pa || plateau[0][0][2] == Pa)) { 
		  plateau[0][0][0] = Pe;
		  } else if ((plateau[0][1][1] == Pa) && (plateau[0][0][0] == Pa || plateau[0][2][0] == Pa)) {
		   plateau[0][0][2] = Pe;
                     meilleurcoup = true;
		     
                   } else if ((plateau[1][1][1] == Pa) && (plateau[0][1][0] == Pa || plateau[0][1][2] == Pa)) {  
                 plateau[2][1][2] = Pe;
		  } else if ((plateau[1][1][1] == Pa) && (plateau[0][1][0] == Pa || plateau[0][1][2] == Pa)) {  
		 plateau[2][1][0] = Pe;
	        } else if ((plateau[1][1][1] == Pa) && (plateau[2][1][2] == Pa || plateau[2][1][0] == Pa)) {
		  plateau[0][1][0] = Pe;
		   } else if ((plateau[1][1][1] == Pa) && (plateau[2][1][2] == Pa || plateau[2][1][0] == Pa)) {
		  plateau[0][1][2] = Pe;
		   meilleurcoup = true;
		   
                        } else if ((plateau[1][2][1] == Pa) && (plateau[0][2][0] == Pa || plateau[0][2][2] == Pa)) {  
                 plateau[2][2][2] = Pe;
		  } else if ((plateau[1][2][1] == Pa) && (plateau[0][2][0] == Pa || plateau[0][2][2] == Pa)) {  
		 plateau[2][2][0] = Pe;
	        } else if ((plateau[1][1][1] == Pa) && (plateau[2][2][2] == Pa || plateau[2][2][0] == Pa)) {
		  plateau[0][2][0] = Pe;
		  } else if ((plateau[1][1][1] == Pa) && (plateau[2][2][2] == Pa || plateau[2][2][0] == Pa)) {
		  plateau[0][2][2] = Pe;
		   meilleurcoup = true;
		   
                 } else if ((plateau[1][1][1] == Pa) && (plateau[0][0][0] == Pa || plateau[0][0][2] == Pa)) {  
                 plateau[2][2][2] = Pe;
		  } else if ((plateau[1][1][1] == Pa) && (plateau[0][0][0] == Pa || plateau[0][0][2] == Pa)) {  
		 plateau[2][2][0] = Pe;
	        } else if ((plateau[1][1][1] == Pa) && (plateau[2][2][2] == Pa || plateau[2][2][0] == Pa)) {
		  plateau[0][0][0] = Pe;
		  } else if ((plateau[1][1][1] == Pa) && (plateau[2][2][2] == Pa || plateau[2][2][0] == Pa)) {
		  plateau[0][0][2] = Pe;
		meilleurcoup = true;
		 
		 } else if ((plateau[1][1][1] == Pa) && (plateau[0][2][0] == Pa || plateau[0][2][2] == Pa)) {  
                 plateau[2][0][2] = Pe;
		  } else if ((plateau[1][1][1] == Pa) && (plateau[0][2][0] == Pa || plateau[0][2][2] == Pa)) {  
		 plateau[2][0][0] = Pe;
	        } else if ((plateau[1][1][1] == Pa) && (plateau[2][0][2] == Pa || plateau[2][0][0] == Pa)) {
		  plateau[0][2][0] = Pe;
		   } else if ((plateau[1][1][1] == Pa) && (plateau[2][0][2] == Pa || plateau[2][0][0] == Pa)) {
		  plateau[0][2][2] = Pe;
                meilleurcoup = true;
		}
   
   }
  }
  }
  return meilleurcoup;
  }

                    
		       
			  
		
			
			

 
		
		
	
